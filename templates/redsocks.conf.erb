base {
	// debug: connection progress & client list on SIGUSR1
	log_debug = off;

	// info: start and end of client session
	log_info = on;

	/* possible `log' values are:
	 *   stderr
	 *   "file:/path/to/file"
	 *   syslog:FACILITY  facility is any of "daemon", "local0"..."local7"
	 */
	log = "syslog:daemon";

	// detach from console
	daemon = on;

	/* Change uid, gid and root directory, these options require root
	 * privilegies on startup.
	 * Note, your chroot may requre /etc/localtime if you write log to syslog.
	 * Log is opened before chroot & uid changing.
	 */
	user = redsocks;
	group = redsocks;
	// chroot = "/var/chroot";

	/* possible `redirector' values are:
	 *   iptables   - for Linux
	 *   ipf        - for FreeBSD
	 *   pf         - for OpenBSD
	 *   generic    - some generic redirector that MAY work
	 */
	redirector = iptables;
}

redsocks {
	local_ip = <%= @bind_address %>;
	local_port = <%= @bind_port %>;
	ip = <%= @proxy_address %>;
	port = <%= @proxy_port %>;

	// known types: socks4, socks5, http-connect, http-relay
	type = socks5;
<%- unless @proxy_user.empty? -%>

	login = "<%= @proxy_user %>";
	password = "<%= @proxy_password %>";
<%- end -%>
}

redudp {
	local_ip = <%= @bind_address %>;
	local_port = <%= @bind_udp_port %>;
	ip = <%= @proxy_address %>;
	port = <%= @proxy_port %>;
<%- unless @proxy_user.empty? -%>

	login = "<%= @proxy_user %>";
	password = "<%= @proxy_password %>";
<%- end -%>

	// kernel does not give us this information, so we have to duplicate it
	// in both iptables rules and configuration file.  By the way, you can
	// set `local_ip' to 127.45.67.89 if you need more than 65535 ports to
	// forward ;-)
	// This limitation may be relaxed in future versions using contrack-tools.
	dest_ip = <%= @udp_dest_address %>;
	dest_port = <%= @udp_dest_port %>;

	udp_timeout = 30;
	udp_timeout_stream = 180;
}

dnstc {
	local_ip = <%= @dns_address %>;
	local_port = <%= @dns_port %>;
}

// you can add more `redsocks' and `redudp' sections if you need.
